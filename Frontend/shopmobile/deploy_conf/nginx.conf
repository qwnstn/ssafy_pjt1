limit_req_zone $binary_remote_addr zone=ddos_req:10m rate=1r/s;

upstream backend{
	ip_hash;
	server 172.26.5.42:8080;
}

#허용하지않은 도메인에서 접속할시 차단. 
#server_name 이 매칭되지않을때 동작하는 기본 서버블록
#server {
#    listen 80 default_server;
#    listen 443 ssl default_server;
#    server_name _;
#    ssl_certificate     /etc/cloudflare/hishop.pem;
#    ssl_certificate_key /etc/cloudflare/hishop.key;
#    return 404;
#}

server {
    listen      80;
    listen  [::]:80;
    server_name         himart.shop;
    return 301 HTTPS://$server_name$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name i8e101.p.ssafy.io;
	ssl_certificate     /etc/cloudflare/hishop.pem;
    ssl_certificate_key /etc/cloudflare/hishop.key;
    return 301 https://himart.shop$request_uri;
}

server {
	client_body_timeout 5s;
    client_header_timeout 5s;
	   
    listen       443 ssl;
	listen  [::]:443 ssl;
    server_name         himart.shop;
    ssl_certificate     /etc/cloudflare/hishop.pem;
    ssl_certificate_key /etc/cloudflare/hishop.key;

    access_log  /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;
	
	if ($http_range ~ "d{9,}") {
         return 444;
     }

    location /app {
		limit_req zone=ddos_req burst=5 nodelay;
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /app/index.html;
    }

	location /api {
		limit_req zone=ddos_req burst=5 nodelay;
        proxy_pass http://backend;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    }
	
	location /kiosk {
		limit_req zone=ddos_req burst=5 nodelay;
		root /usr/share/nginx/html;
		index  index.html index.htm;
		try_files $uri $uri/ /kiosk/index.html;
	}
	
	location /admin {
		limit_req zone=ddos_req burst=5 nodelay;
		root /usr/share/nginx/html;
		index  index.html index.htm;
		try_files $uri $uri/ /admin/index.html;
	}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}